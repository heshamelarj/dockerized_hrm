security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    role_hierarchy:
      ROLE_USER:                ROLE_USER
      ROLE_SECRETAIRE_GENERALE: [ROLE_USER,ROLE_SECRETAIRE_GENERALE]
      ROLE_VD:                  ROLE_VD
      ROLE_DOYEN:               [ROLE_USER,ROLE_SECRETAIRE_GENERALE,ROLE_VD]
      ROLE_ADMIN:               [ROLE_USER,ROLE_SECRETAIRE_GENERALE,ROLE_VD,ROLE_DOYEN]
    encoders:
        App\Entity\User:
            algorithm: auto
    providers:
        users:
          entity:
            class: App\Entity\User
            property: cin

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:

            logout:    
              path: logout
            anonymous: true
            form_login:
              login_path: login
              check_path: login
              provider: users
            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator
             # csrf_token_generator: security.csrf.token_manager

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
         - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
         - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
         - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
         - { path: ^/admin/, role: ROLE_ADMIN }
         - { path: ^/, role: ROLE_USER }

